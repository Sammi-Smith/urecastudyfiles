proc datasets library=work kill nolist nodetails; quit;
dm out "clear"; dm log "clear";  
*******************************************************************************
*  Copyright Rho, Inc. 2011 all rights reserved                               *
*******************************************************************************;
*******************************************************************************
* Program created using SAS version 9.1 
*
* PROGRAMMER HISTORY:
*   Programmer(s)       Date(s)         Brief Description of Modifications
*   C. Visness         06/17/10      Check maternal RAST data
*   K. Jaffee          10/31/11       Change variable names 
*   S. Lussier         07/03/17        Cleaned log
*******************************************************************************;

*** 1. Set-up *****************************************************************;
options nodate pageno=1 mprint;
options orientation=landscape ls=96 ps=53 font=SASFONT 6;

*** Library, Titles (1,2) and Footnotes (1) Setup ***;
%inc "S:\RhoFED\ICAC\Studies\TemplateSetup.sas";
%TemplateSetup(/* Name of the program  */
               prog=Maternal_IgE,
               /* Location to save     */
               pgmpath=S:\RhoFED\ICAC\Studies\URECA\Prog\Derive,
               /* Study library to add */
               study=ureca);

libname locked 'S:RhoFED\ICAC_main\ICAC3\URECA\Statistics\Data\Derive';
*** Save program source code ***;
dm "file &gpgmpath\&gprog..sas replace";

* Main body of program begins here;

proc sort data=master.mbsc out=mbsc; by studyid event; run ;
proc sort data=master.mrr  out=mrr ; by studyid; run ;
**NOTE: somehow the two deleted ones are the ones with no data, so that's cool;

data mrr2 ;
   set mrr ;

   ***get rid of 2 dups ;
*hardcodes here have been removed to protect patient confidentiality;
run ;


proc freq data=mbsc; tables avisit mbsc_q1; run;

data blood;
   set mbsc;
   by studyid event;
   if mbsc_q1=1;
run;

**NOTE: duplicates are mainly the replacement blood in Boston
  We only need to know how many unique moms had blood collected;
proc sort data=blood nodupkey dupout=dupblood; by studyid; run;

data maternal_ige00;
   merge mrr2 (rename=(avisit=rvisit)) blood (keep=studyid event avisit mbsc_q1 MBSC_q2a) /*igesamples (keep=studyid id status specimen_id date_shipped date_received)*/;
   by studyid;

**according to Hugh Sampson, the Phadia test is valid down to 0.10 kU/L now;
   if mrr_q1a1=.B or 0 <= mrr_q1a1 < 0.10 then roach_ige=0.09;
   if mrr_q1a1 >= 0.10                then roach_ige = mrr_q1a1;

   if mrr_q1b1=.B or 0 <= mrr_q1b1 < 0.10 then derp_ige=0.09;
   if mrr_q1b1 >= 0.10                then derp_ige = mrr_q1b1;

   if mrr_q1c1=.B or 0 <= mrr_q1c1 < 0.10 then alt_ige=0.09;
   if mrr_q1c1 >= 0.10                then alt_ige = mrr_q1c1;

   if mrr_q1d1=.B or 0 <= mrr_q1d1 < 0.10 then total_ige=0.09;
   if mrr_q1d1 >= 0.10                then total_ige = mrr_q1d1;

   if mrr_q1e1=.B or 0 <= mrr_q1e1 < 0.10 then cat_ige=0.09;
   if mrr_q1e1 >= 0.10                then cat_ige = mrr_q1e1;

   if mrr_q1f1=.B or 0 <= mrr_q1f1 < 0.10 then birch_ige=0.09;
   if mrr_q1f1 >= 0.10                then birch_ige = mrr_q1f1;

   if mrr_q1g1=.B or 0 <= mrr_q1g1 < 0.10 then oak_ige=0.09;
   if mrr_q1g1 >= 0.10                then oak_ige = mrr_q1g1;

   if mrr_q1h1=.B or 0 <= mrr_q1h1 < 0.10 then ragweed_ige=0.09;
   if mrr_q1h1 >= 0.10                then ragweed_ige = mrr_q1h1;

   if mrr_q1i1=.B or 0 <= mrr_q1i1 < 0.10 then timgrass_ige=0.09;
   if mrr_q1i1 >= 0.10                then timgrass_ige = mrr_q1i1;

   if mrr_q1j1=.B or 0 <= mrr_q1j1 < 0.10 then mouse_ige=0.09;
   if mrr_q1j1 >= 0.10                then mouse_ige = mrr_q1j1;

   if mrr_q1k1=.B or 0 <= mrr_q1k1 < 0.10 then derf_ige=0.09;
   if mrr_q1k1 >= 0.10                then derf_ige = mrr_q1k1;

   if mrr_q1l1=.B or 0 <= mrr_q1l1 < 0.10 then dog_ige=0.09;
   if mrr_q1l1 >= 0.10                then dog_ige = mrr_q1l1;


      if roach_ige >=0.35 then roach_pos=1;
   else if roach_ige >.z    then roach_pos=0;

      if derp_ige >=0.35 then derp_pos=1;
   else if derp_ige >.z    then derp_pos=0;

      if alt_ige >=0.35 then alt_pos=1;
   else if alt_ige >.z    then alt_pos=0;

      if cat_ige >=0.35 then cat_pos=1;
   else if cat_ige >.z    then cat_pos=0;

      if birch_ige >=0.35 then birch_pos=1;
   else if birch_ige >.z    then birch_pos=0;

      if oak_ige >=0.35 then oak_pos=1;
   else if oak_ige >.z    then oak_pos=0;

      if ragweed_ige >=0.35 then ragweed_pos=1;
   else if ragweed_ige >.z    then ragweed_pos=0;

      if timgrass_ige >=0.35 then timgrass_pos=1;
   else if timgrass_ige >.z    then timgrass_pos=0;

      if mouse_ige >=0.35 then mouse_pos=1;
   else if mouse_ige >.z    then mouse_pos=0;

      if derf_ige >=0.35 then derf_pos=1;
   else if derf_ige >.z    then derf_pos=0;

      if dog_ige >=0.35 then dog_pos=1;
   else if dog_ige >.z    then dog_pos=0;

   array res (*) 
            roach_ige derp_ige alt_ige total_ige cat_ige birch_ige oak_ige
         ragweed_ige timgrass_ige mouse_ige derf_ige dog_ige ;
   array new (*) 
            roach_ige_l derp_ige_l alt_ige_l total_ige_l cat_ige_l birch_ige_l oak_ige_l
         ragweed_ige_l timgrass_ige_l mouse_ige_l derf_ige_l dog_ige_l ;

   do i=1 to dim(new);
       if res(i) ^= . then new(i) = log10(res(i)+0.01);
       else new(i) = .;
   end;

   if nmiss(roach_pos, derp_pos, alt_pos, cat_pos, birch_pos, oak_pos, 
             ragweed_pos, timgrass_pos, mouse_pos, derf_pos, dog_pos) ^= 11 
         then any_ige=max(roach_pos, derp_pos, alt_pos, cat_pos, birch_pos, oak_pos, 
             ragweed_pos, timgrass_pos, mouse_pos, derf_pos, dog_pos);
         else any_ige=.; 

   if nmiss(roach_ige, derp_ige, alt_ige, cat_ige, birch_ige, oak_ige,
             ragweed_ige, timgrass_ige, mouse_ige, derf_ige, dog_ige) ^= 11 
         then sum_ige=sum(roach_ige, derp_ige, alt_ige, cat_ige, birch_ige, oak_ige,
             ragweed_ige, timgrass_ige, mouse_ige, derf_ige, dog_ige); 
         else sum_ige=.; 

   if nmiss(roach_pos, derp_pos, derf_pos, cat_pos, dog_pos, mouse_pos) ^= 6 
         then any_aeroallergen=max(roach_pos, derp_pos, derf_pos, cat_pos, dog_pos, mouse_pos); 
         else any_aeroallergen=.; 

   if nmiss(birch_pos, oak_pos, ragweed_pos, timgrass_pos, alt_pos) ^= 5 
         then any_outdoor=max(birch_pos, oak_pos, ragweed_pos, timgrass_pos, alt_pos); 
         else any_outdoor=.; 

   if nmiss(roach_pos, derp_pos, alt_pos, cat_pos, birch_pos, oak_pos, 
              ragweed_pos, timgrass_pos, mouse_pos, derf_pos, dog_pos) ^= 11 
         then num_ige=sum(roach_pos, derp_pos, alt_pos, cat_pos, birch_pos, oak_pos, 
              ragweed_pos, timgrass_pos, mouse_pos, derf_pos, dog_pos); 
         else num_ige=.; 

   format roach_pos derp_pos alt_pos cat_pos birch_pos oak_pos ragweed_pos 
         timgrass_pos mouse_pos derf_pos dog_pos any_ige any_aeroallergen any_outdoor yesnofm.;

   rename MBSC_q2a=mom_bloodcolldate
         MBSC_q1=mom_bloodcoll 
         aprocdate=procdate_momige ;

label    roach_ige='sIge to Cockroach'
       derp_ige='sIge to Der p Mite'
       alt_ige='sIge to Alternaria'
      total_ige='Total Ige'
      cat_ige='sIge to Cat'
      birch_ige='sIge to Birch'
      oak_ige='sIge to Oak'
      ragweed_ige='sIge to Ragweed'
      timgrass_ige='sIge to Timothy Grass'
      mouse_ige='sIge to Mouse'
      derf_ige='sIge to Der f Mite'
      dog_ige='sIge to Dog'
      roach_pos='Cockroach RAST >= 0.35'
      derp_pos='Der p IgE >= 0.35'
      alt_pos='Alternaria IgE >= 0.35'
      cat_pos='Cat IgE >= 0.35'
      birch_pos='Birch IgE >= 0.35'
      oak_pos='Oak IgE >= 0.35'
      ragweed_pos='Ragweed IgE >= 0.35'
      timgrass_pos='Timothy Grass IgE >= 0.35'
      mouse_pos='Mouse IgE >= 0.35'
      derf_pos='Der f IgE >= 0.35'
      dog_pos='Dog IgE >= 0.35'
      any_ige='Any positive specific IgE'
      sum_ige='Sum of specific IgEs'
      any_aeroallergen='Any positive specific IgE to indoor allergen'
      any_outdoor='Any positive specific IgE to outdoor allergen'
      num_ige='Number of positive specific IgEs' 
      roach_ige_l='sIge to Roach (kUa/L) (log10)'
      derp_ige_l='sIge to Der p mite (kUa/L) (log10)'
      alt_ige_l='sIge to Alternaria (kUa/L) (log10)'
      total_ige_l='Total IgE (kUa/L) (log10)'
      cat_ige_l='sIge to Cat (kUa/L) (log10)'
      birch_ige_l='sIge to Birch (kUa/L) (log10)'
      oak_ige_l='sIge to Oak (kUa/L) (log10)'
      ragweed_ige_l='sIge to Ragweed (kUa/L) (log10)'
      timgrass_ige_l='sIge to Timothy Grass (kUa/L) (log10)'
      mouse_ige_l='sIge to Mouse (kUa/L) (log10)'
      derf_ige_l='sIge to Der f mite (kUa/L) (log10)'
      dog_ige_l='sIge to Dog (kUa/L) (log10)';

      drop i recruitid status astudyid avisit rvisit
         MRR_q1a1 MRR_q1b1 MRR_q1c1 MRR_q1d1 MRR_q1e1 MRR_q1f1 MRR_q1g1 MRR_q1h1 MRR_q1i1 MRR_q1j1 MRR_q1k1 MRR_q1l1 
        MRR_q1a2 MRR_q1b2 MRR_q1c2          MRR_q1e2 MRR_q1f2 MRR_q1g2 MRR_q1h2 MRR_q1i2 MRR_q1j2 MRR_q1k2 MRR_q1l2 ;
run;

proc sort data=maternal_ige00 nodupkey ; by studyid ; run ;


/*************************************************************************************
 Create Shell - note we will not create avisit and year since every mom had 
 a visit whenever they could (mostly m12) and it was only occurring once
**************************************************************************************/
data shell60;
 set derive.groups;

 site=substr(studyid, 4, 2);
 label    site="Study Site";
 format site $site.;

 ***These are the moms of the twins - keeping them in as of 2/23/15 for a JGern 7 year outcomes dataset ;
*hardcodes here have been removed to protect patient confidentiality;
 keep studyid recruitid site ;
run;

/*************************************************************************************
 Merge and derive
**************************************************************************************/
proc sort data=shell60        ; by studyid ; run;
proc sort data=Maternal_ige00 ; by studyid ; run;

data derive.maternal_IgE;
   merge shell60(in=a) Maternal_ige00(in=b);
   by studyid ;
   avisit = 12 ;
   year = 1 ;

*hardcodes here have been removed to protect patient confidentiality;

   if b=1 then maternal_IgE=1; else maternal_IgE=0;
run;

data locked.maternal_IgE;
   merge shell60(in=a) Maternal_ige00(in=b);
   by studyid ;
   avisit = 12 ;
   year = 1 ;

*hardcodes here have been removed to protect patient confidentiality;

   if b=1 then maternal_IgE=1; else maternal_IgE=0;
run;

*** 3. Codebook ****************************************************************;
%include 'S:\BASESTAT\RhoUtil\gitGot.sas';
 %gitGot(repo = https://github.com/RhoInc/sas-codebook,
         folder = Macros);

%codebook_generic
        (data = derive.maternal_IgE,
        pdfpath = S:/RhoFED/ICAC/Studies/URECA/Data/Derive/CBK);

/*%inc "O:\Asthma\Apps\Cbk\codebook.sas";*/
/*%codebook(file=derive.maternal_IgE,*/
/*          pdfname=maternal_IgE,*/
/*          formats=library,*/
/*        save=F,*/
/*        clean=T,*/
/*          pdfloc=%str(S:/RhoFED/ICAC/Studies/URECA/Data/Derive/CBK));*/

*** 4. Save Log and Output ****************************************************;
quit;
dm out  "file &gpgmpath\&gprog..lst replace";
dm log  "file &gpgmpath\&gprog..log replace" log;


ods select Position;
proc contents data=derive.maternal_IgE position; run;
run;
ods select default;