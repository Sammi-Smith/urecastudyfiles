%include 'S:\BASESTAT\RhoUtil\gridReset.sas';
%gridReset(S:\RhoFED\ICAC\Studies\URECA\Prog\Derive);

/*----------------------- Copyright 2017, Rho, Inc.  All rights reserved. ------------------------\

  Study:       ICAC07 URECA

   Program:    becks_depression.sas

     Purpose:  Combine raw data from master.bd with score calculated in master.p_study_data

     Input:    S:\RhoFED\ICAC\Studies\URECA\Data\Master\(bd p_study_data).sas7bdat

     Output:   S:\RhoFED\ICAC_main\URECA\Statistics\Data\Derive\becks_depression.sas7bdat

     Macros:   %TemplateSetup

/-------------------------------------------------------------------------------------------------\
  Program history:
\-------------------------------------------------------------------------------------------------/

    Date       Programmer          Description
    ---------  ------------------  --------------------------------------------------------------
    19JUN2017  Andrew Moseby       Create
    12JUL2019  Maya Barton         Derive Dep_Tscores, Dep_Severity_Level
\------------------------------------------------------------------------------------------------*/
OPTION VALIDVARNAME=V7;
*-----   1. Setup   -----*;
options nodate pageno=1 mprint;
options orientation=landscape ls=96 ps=53 font=SASFONT 6;

*** Library, Titles (1,2) and Footnotes (1) Setup ***;
%inc "S:\RhoFED\ICAC\Studies\TemplateSetup.sas";
%TemplateSetup(/* Name of the program  */
               prog=becks_depression,
               /* Location to save     */
               pgmpath=S:\RhoFED\ICAC\Studies\URECA\Prog\Derive,
               /* Study library to add */
               study=ureca);

*** Save program source code ***;
dm "file &gpgmpath\&gprog..sas replace";

*-----   2. Main body   -----*;

proc sort data = master.bd out = bd; by studyid; run;
proc sort data = master.p_study_data out = psd; by studyid; run;
proc sort data = derive.demog_1rec out = gender(keep= studyid baby_gender_c); by studyid; run;

*take data from the last visit with non-missing data;
data bd2;
   set bd;
   avisitn = input(avisit, 8.);
   rename avisitn = avisit; 
   drop avisit;
run;

proc sort data = bd2; by studyid descending avisit; where status = 'complete'; run;

/*************************************************************************************
 Create Shell
**************************************************************************************/
data shell;
 set derive.groups;

 site=substr(studyid, 4, 2);
 label    site="Study Site";
 format site $site.;

 do avisit = 96,120;
  if avisit in ( 96) then year=8;
  if avisit in (120) then year=10;
  output;
 end;
 keep studyid recruitid site avisit year;
run;

/*************************************************************************************
 Merge with Shell
**************************************************************************************/
proc sort data=bd2; by studyid avisit;
proc sort data=shell; by studyid avisit; 

data BD_1;
 merge shell bd2 (drop=recruitid in=c);
 by studyid avisit;
 if c=1 then becks_depression=1; else becks_depression=0;
run;
proc sort data = BD_1; by studyid avisit; run;
proc sort data = gender; by studyid; run;
data BD_2;
     merge BD_1 gender;
     by studyid;
     missflag=nmiss(BD_q1-BD_q20);
     Scale_Sum = Sum(of BD_q1-BD_q20);
run;
proc freq data=BD_2; table Scale_sum; run;


********************************************************;
************Import Scale to Score by gender spreadsheet;
PROC IMPORT OUT= work.BecksTscores 
            DATAFILE= "S:\RhoFED\ICAC\Studies\URECA\Data\Misc\Becks\BecksTScores_transposed.csv"
            DBMS=CSV REPLACE;
RUN; 

*******Keep BAI & age 7-10 for this dataset;
data BecksTscoresA;
     set BecksTscores;
     if Scale = 'BDI' and Min_Age = 7 and Max_Age = 10;
     AgeBDI = '7-10';
     drop Min_Age Max_Age;
run;

********Transpose and create BAI dataset for ease of merging;
proc transpose data = BecksTscoresA 
               out  = T_BDTS 
               prefix = Gender;
run;

proc sql;
     create table F_BDTS as 
      select 'Female' as baby_gender_C, gender1 as T_ScoreN, input((compress(_NAME_, '_')), 8.) as Scale
      from T_BDTS;

     create table M_BDTS as
      select 'Male' as baby_gender_C, gender2 as T_ScoreN, input((compress(_NAME_, '_')), 8.) as Scale
      from T_BDTS;
run; 
data BDTS; set F_BDTS M_BDTS; run;

********Apply Score to Index;
proc sql;
   create table temp_BDTS as
   select BD_2.*, BDTS.Scale, BDTS.T_ScoreN
   from BD_2 a left join BDTS b on b.baby_gender_c=a.baby_gender_C
   order by studyid, avisit;

   create table BD_3 as
   select * from temp_BDTS
   where Scale_Sum = Scale
   order by studyid, avisit;

quit;

proc sort data = BD_3; by studyid avisit Scale_Sum; run;
proc sort data = BD_2; by studyid avisit Scale_sum; run;

*******Merge back to shell and Derive Severity_Level;
data BD_4;
     length Dep_Severity_Level $20;
     merge BD_2 
           BD_3(keep= studyid avisit T_ScoreN Scale_Sum Scale T_ScoreN);
     by studyid avisit Scale_sum;
               if (T_ScoreN >=70) then Dep_Severity_Level = 'Extremely Elevated';
     else if (59< T_ScoreN <70) then Dep_Severity_Level = 'Moderately elevated';
     else if (55 <= T_ScoreN <=59) then Dep_Severity_Level = 'Mildly elevated';
     else if not missing(T_ScoreN) and (T_ScoreN < 55) then Dep_Severity_Level = 'Average';
     rename T_ScoreN = Dep_TScore;

     if avisit = 108 then year = 9; 

run;

proc freq data= BD_4; tables avisit*Dep_Severity_Level/out=Dep_Severity_Level_Freq; run;
proc freq data= BD_4; tables avisit*Dep_TScore/out=Dep_T_Score_Freq; run;
proc freq data= BD_4; table avisit*Scale_sum/out=Dep_Scale_sum_freq; run;

libname freqdir "S:\RhoFED\ICAC\Studies\URECA\Data\Derive\BAI Freqs";
data freqdir.Severity_Level_Freq; set Dep_Severity_Level_Freq; run;
data freqdir.T_Score_Freq; set Dep_T_Score_Freq; run;
data freqdir.Scale_sum; set Dep_Scale_sum_freq; run;


proc sort data= BD_4; by studyid avisit; run;
data derive.becks_depression; set BD_4; run;

*** Codebook ****************************************************************;

%include 'S:\BASESTAT\RhoUtil\gitGot.sas';
    %gitGot
        (repo = https://github.com/RhoInc/sas-codebook
        ,folder = Macros);

%codebook_generic
        (data = derive.becks_depression
        ,pdfpath = S:/RhoFED/ICAC/Studies/URECA/Data/Derive/CBK);

