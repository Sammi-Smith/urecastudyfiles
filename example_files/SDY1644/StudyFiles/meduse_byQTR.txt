

proc sort data=meds10; by studyid quarter avisit; run;
proc sort data=meds10 out=medsqtr20; by quarter; run;

*Do some additional data checking;
/*
proc means data=medsqtr20;
   var albut_broncho -- other_route_unknown;
   by year;
run;

proc freq data=medsqtr20;
   tables albut_broncho -- other_route_unknown ;
   by year;
run;
*/
*Check for participants with missing studyid - should not be any!;
proc print data=medsqtr20; where studyid in (' '); run;
proc sort data=master.p_study_data out=pdata (keep=recruitid studyid p_status); where p_status in ('active','inactive'); by studyid; run;
proc print data=pdata; where studyid in (' '); run;

proc sort data=medsqtr20; by studyid; run;

data medsqtr30 nomedsqtr;
 merge pdata medsqtr20;
  by studyid;

  *output a dataset for participants who did not report any meds;
  if medcode = . then output nomedsqtr;
  else output medsqtr30;
run;

*macro to create yearly rows for participants with no meds;
%macro create_rows(qtr);

data nomedsqtr&qtr;
 set nomedsqtr;

 quarter = &qtr.;

 albut_broncho = 0;
 analgesics_oral= 0;
 analgesics_topical = 0;
 antibiot_oral = 0;
 antibiot_topical = 0;
 antifung_oral = 0;
 antifung_topical = 0; 
 antihist_oral = 0; 
 antihist_topical = 0; 
 antileuk = 0;
 cough_meds = 0; 
 cromones = 0;
 decongest = 0;
 gi_meds = 0;
 LABA = 0;
 nasalspray_noster = 0;
 nasalspray_ster = 0;
 steroid_inhaled = 0;
 steroid_oral = 0;
 steroid_topical = 0;
 ophthals = 0;
 otological = 0;
 epinephrine = 0;
 vitamin = 0;
 antiviral_oral = 0;
 inhaled_steroid_LABA = 0;
 combo_antihist = 0;
 combo_nonantihist = 0;
 cold_preps = 0;
 other_topical = 0;
 other_inhale = 0;
 other_oral = 0;
 other_route_unknown = 0;

run;

%mend;

%macro CreateRows();
%do i=1 %to 40;
%create_rows(&i.);
%end;
%mend;
%CreateRows();

*Set the quarters of data per participant together;
data nomedsqtr00;
 set nomedsqtr1 - nomedsqtr40;
run;

*Now put all the meds and nomeds rows back together;
data medsqtr40;
 set medsqtr30 nomedsqtr00;
run;

*Sort and keep only one row per participant per quarter;
*To prepare dataset for creating rows for participants who did not report meds for each quarter in dataset;
proc sort data=medsqtr40 out=medsqtr50 nodupkey; by studyid quarter; run;

*Transpose to see what we have;
proc transpose data=medsqtr50  (keep=studyid quarter) out=medsqtr50t;
 by studyid;
run;

*Now begins the repetitive task of creating rows;
data medsqtr60 compqtrs incompqtrs;
 set medsqtr50t;

 *if all transposed columns contain a value then participant has meds reported for each year;
 *otherwise, output all participants who do not have complete data;
 *NOTE: this code will have to be updated once additional years of data are added;
 *Otherwise, may need to come up with a different way of handling this!!!;
 if col1=1 and col2=2 and col3=3 and col4=4 and col5=5 and col6=6 and col7=7 and col8=8 and
    col9=9 and col10=10 and col11=11 and col12=12 and col13=13 and col14=14 and col15=15 and 
    col16=16 and col17=17 and col18=18 and col19=19 and col20=20 and col21=21 and col22=22 and 
    col23=23 and col24=24 and col25=25 and col26=26 and col27=27 and col28=28 and col29=29 and
    col30=30 and col31=31 and col32=32 and col33=33 and col34=34 and col35=35 and col36=36 and 
    col37=37 and col38=38 and col39=39 and col40=40 then output compqtrs;
 else output incompqtrs;
run;



%macro DoWork(n=,whr=);
data incompqtr&n;
 set incompqtrs;
  where &whr;

 quarter = &n;

 albut_broncho = 0;
 analgesics_oral= 0;
 analgesics_topical = 0;
 antibiot_oral = 0;
 antibiot_topical = 0;
 antifung_oral = 0;
 antifung_topical = 0; 
 antihist_oral = 0; 
 antihist_topical = 0; 
 antileuk = 0;
 cough_meds = 0; 
 cromones = 0;
 decongest = 0;
 gi_meds = 0;
 LABA = 0;
 nasalspray_noster = 0;
 nasalspray_ster = 0;
 steroid_inhaled = 0;
 steroid_oral = 0;
 steroid_topical = 0;
 ophthals = 0;
 otological = 0;
 epinephrine = 0;
 vitamin = 0;
 antiviral_oral = 0;
 inhaled_steroid_LABA = 0;
 combo_antihist = 0;
 combo_nonantihist = 0;
 cold_preps = 0;
 other_topical = 0;
 other_inhale = 0;
 other_oral = 0;
 other_route_unknown = 0;
run;
%mend;

%DoWork(n=1,whr=col1 ne 1);
%DoWork(n=2,whr=col1 ne 2 and col2 ne 2);
%DoWork(n=3,whr=col1 ne 3 and col2 ne 3 and col3 ne 3);
%DoWork(n=4,whr=col1 ne 4 and col2 ne 4 and col3 ne 4 and col4 ne 4);
%DoWork(n=5,whr=col1 ne 5 and col2 ne 5 and col3 ne 5 and col4 ne 5 and col5 ne 5);
%DoWork(n=6,whr=col1 ne 6 and col2 ne 6 and col3 ne 6 and col4 ne 6 and col5 ne 6 and col6 ne 6);
%DoWork(n=7,whr=col1 ne 7 and col2 ne 7 and col3 ne 7 and col4 ne 7 and col5 ne 7 and col6 ne 7 and col7 ne 7);
%DoWork(n=8,whr=col1 ne 8 and col2 ne 8 and col3 ne 8 and col4 ne 8 and col5 ne 8 and col6 ne 8 and col7 ne 8 and 
                col8 ne 8);
%DoWork(n=9,whr=col1 ne 9 and col2 ne 9 and col3 ne 9 and col4 ne 9 and col5 ne 9 and col6 ne 9 and col7 ne 9 and 
                col8 ne 9 and col9 ne 9);
%DoWork(n=10,whr=col1 ne 10 and col2 ne 10 and col3 ne 10 and col4 ne 10 and col5 ne 10 and col6 ne 10 and col7 ne 10 and 
                 col8 ne 10 and col9 ne 10 and col10 ne 10);
%DoWork(n=11,whr=col1 ne 11 and col2 ne 11 and col3 ne 11 and col4 ne 11 and col5 ne 11 and col6 ne 11 and col7 ne 11 and 
                 col8 ne 11 and col9 ne 11 and col10 ne 11 and col11 ne 11);
%DoWork(n=12,whr=col1 ne 12 and col2 ne 12 and col3 ne 12 and col4 ne 12 and col5 ne 12 and col6 ne 12 and col7 ne 12 and 
                 col8 ne 12 and col9 ne 12 and col10 ne 12 and col11 ne 12 and col12 ne 12);
%DoWork(n=13,whr=col1 ne 13 and col2 ne 13 and col3 ne 13 and col4 ne 13 and col5 ne 13 and col6 ne 13 and col7 ne 13 and 
                 col8 ne 13 and col9 ne 13 and col10 ne 13 and col11 ne 13 and col12 ne 13 and col13 ne 13);
%DoWork(n=14,whr=col1 ne 14 and col2 ne 14 and col3 ne 14 and col4 ne 14 and col5 ne 14 and col6 ne 14 and col7 ne 14 and 
                 col8 ne 14 and col9 ne 14 and col10 ne 14 and col11 ne 14 and col12 ne 14 and col13 ne 14 and col14 ne 14);
%DoWork(n=15,whr=col1 ne 15 and col2 ne 15 and col3 ne 15 and col4 ne 15 and col5 ne 15 and col6 ne 15 and col7 ne 15 and 
                 col8 ne 15 and col9 ne 15 and col10 ne 15 and col11 ne 15 and col12 ne 15 and col13 ne 15 and col14 ne 15 and
                 col15 ne 15);
%DoWork(n=16,whr=col1 ne 16 and col2 ne 16 and col3 ne 16 and col4 ne 16 and col5 ne 16 and col6 ne 16 and col7 ne 16 and 
                 col8 ne 16 and col9 ne 16 and col10 ne 16 and col11 ne 16 and col12 ne 16 and col13 ne 16 and col14 ne 16 and
                 col15 ne 16 and col16 ne 16);
%DoWork(n=17,whr=col1 ne 17 and col2 ne 17 and col3 ne 17 and col4 ne 17 and col5 ne 17 and col6 ne 17 and col7 ne 17 and 
                 col8 ne 17 and col9 ne 17 and col10 ne 17 and col11 ne 17 and col12 ne 17 and col13 ne 17 and col14 ne 17 and
                 col15 ne 17 and col16 ne 17 and col17 ne 17);
%DoWork(n=18,whr=col1 ne 18 and col2 ne 18 and col3 ne 18 and col4 ne 18 and col5 ne 18 and col6 ne 18 and col7 ne 18 and 
                 col8 ne 18 and col9 ne 18 and col10 ne 18 and col11 ne 18 and col12 ne 18 and col13 ne 18 and col14 ne 18 and
                 col15 ne 18 and col16 ne 18 and col17 ne 18 and col18 ne 18);
%DoWork(n=19,whr=col1 ne 19 and col2 ne 19 and col3 ne 19 and col4 ne 19 and col5 ne 19 and col6 ne 19 and col7 ne 19 and 
                 col8 ne 19 and col9 ne 19 and col10 ne 19 and col11 ne 19 and col12 ne 19 and col13 ne 19 and col14 ne 19 and
                 col15 ne 19 and col16 ne 19 and col17 ne 19 and col18 ne 19 and col19 ne 19);
%DoWork(n=20,whr=col1 ne 20 and col2 ne 20 and col3 ne 20 and col4 ne 20 and col5 ne 20 and col6 ne 20 and col7 ne 20 and 
                 col8 ne 20 and col9 ne 20 and col10 ne 20 and col11 ne 20 and col12 ne 20 and col13 ne 20 and col14 ne 20 and
                 col15 ne 20 and col16 ne 20 and col17 ne 20 and col18 ne 20 and col19 ne 20 and col20 ne 20);
%DoWork(n=21,whr=col1 ne 21 and col2 ne 21 and col3 ne 21 and col4 ne 21 and col5 ne 21 and col6 ne 21 and col7 ne 21 and 
                 col8 ne 21 and col9 ne 21 and col10 ne 21 and col11 ne 21 and col12 ne 21 and col13 ne 21 and col14 ne 21 and
                 col15 ne 21 and col16 ne 21 and col17 ne 21 and col18 ne 21 and col19 ne 21 and col20 ne 21 and col21 ne 21);
%DoWork(n=22,whr=col1 ne 22 and col2 ne 22 and col3 ne 22 and col4 ne 22 and col5 ne 22 and col6 ne 22 and col7 ne 22 and 
                 col8 ne 22 and col9 ne 22 and col10 ne 22 and col11 ne 22 and col12 ne 22 and col13 ne 22 and col14 ne 22 and
                 col15 ne 22 and col16 ne 22 and col17 ne 22 and col18 ne 22 and col19 ne 22 and col20 ne 22 and col21 ne 22 and
                 col22 ne 22);
%DoWork(n=23,whr=col1 ne 23 and col2 ne 23 and col3 ne 23 and col4 ne 23 and col5 ne 23 and col6 ne 23 and col7 ne 23 and 
                 col8 ne 23 and col9 ne 23 and col10 ne 23 and col11 ne 23 and col12 ne 23 and col13 ne 23 and col14 ne 23 and
                 col15 ne 23 and col16 ne 23 and col17 ne 23 and col18 ne 23 and col19 ne 23 and col20 ne 23 and col21 ne 23 and
                 col22 ne 23 and col23 ne 23);
%DoWork(n=24,whr=col1 ne 24 and col2 ne 24 and col3 ne 24 and col4 ne 24 and col5 ne 24 and col6 ne 24 and col7 ne 24 and 
                 col8 ne 24 and col9 ne 24 and col10 ne 24 and col11 ne 24 and col12 ne 24 and col13 ne 24 and col14 ne 24 and
                 col15 ne 24 and col16 ne 24 and col17 ne 24 and col18 ne 24 and col19 ne 24 and col20 ne 24 and col21 ne 24 and
                 col22 ne 24 and col23 ne 24 and col24 ne 24);
%DoWork(n=25,whr=col1 ne 25 and col2 ne 25 and col3 ne 25 and col4 ne 25 and col5 ne 25 and col6 ne 25 and col7 ne 25 and 
                 col8 ne 25 and col9 ne 25 and col10 ne 25 and col11 ne 25 and col12 ne 25 and col13 ne 25 and col14 ne 25 and
                 col15 ne 25 and col16 ne 25 and col17 ne 25 and col18 ne 25 and col19 ne 25 and col20 ne 25 and col21 ne 25 and
                 col22 ne 25 and col23 ne 25 and col24 ne 25 and col25 ne 25);
%DoWork(n=26,whr=col1 ne 26 and col2 ne 26 and col3 ne 26 and col4 ne 26 and col5 ne 26 and col6 ne 26 and col7 ne 26 and 
                 col8 ne 26 and col9 ne 26 and col10 ne 26 and col11 ne 26 and col12 ne 26 and col13 ne 26 and col14 ne 26 and
                 col15 ne 26 and col16 ne 26 and col17 ne 26 and col18 ne 26 and col19 ne 26 and col20 ne 26 and col21 ne 26 and
                 col22 ne 26 and col23 ne 26 and col24 ne 26 and col25 ne 26 and col26 ne 26);
%DoWork(n=27,whr=col1 ne 27 and col2 ne 27 and col3 ne 27 and col4 ne 27 and col5 ne 27 and col6 ne 27 and col7 ne 27 and 
                 col8 ne 27 and col9 ne 27 and col10 ne 27 and col11 ne 27 and col12 ne 27 and col13 ne 27 and col14 ne 27 and
                 col15 ne 27 and col16 ne 27 and col17 ne 27 and col18 ne 27 and col19 ne 27 and col20 ne 27 and col21 ne 27 and
                 col22 ne 27 and col23 ne 27 and col24 ne 27 and col25 ne 27 and col26 ne 27 and col27 ne 27);
%DoWork(n=28,whr=col1 ne 28 and col2 ne 28 and col3 ne 28 and col4 ne 28 and col5 ne 28 and col6 ne 28 and col7 ne 28 and 
                 col8 ne 28 and col9 ne 28 and col10 ne 28 and col11 ne 28 and col12 ne 28 and col13 ne 28 and col14 ne 28 and
                 col15 ne 28 and col16 ne 28 and col17 ne 28 and col18 ne 28 and col19 ne 28 and col20 ne 28 and col21 ne 28 and
                 col22 ne 28 and col23 ne 28 and col24 ne 28 and col25 ne 28 and col26 ne 28 and col27 ne 28 and col28 ne 28);
%DoWork(n=29,whr=col1 ne 29 and col2 ne 29 and col3 ne 29 and col4 ne 29 and col5 ne 29 and col6 ne 29 and col7 ne 29 and 
                 col8 ne 29 and col9 ne 29 and col10 ne 29 and col11 ne 29 and col12 ne 29 and col13 ne 29 and col14 ne 29 and
                 col15 ne 29 and col16 ne 29 and col17 ne 29 and col18 ne 29 and col19 ne 29 and col20 ne 29 and col21 ne 29 and
                 col22 ne 29 and col23 ne 29 and col24 ne 29 and col25 ne 29 and col26 ne 29 and col27 ne 29 and col28 ne 29 and
                 col29 ne 29);
%DoWork(n=30,whr=col1 ne 30 and col2 ne 30 and col3 ne 30 and col4 ne 30 and col5 ne 30 and col6 ne 30 and col7 ne 30 and 
                 col8 ne 30 and col9 ne 30 and col10 ne 30 and col11 ne 30 and col12 ne 30 and col13 ne 30 and col14 ne 30 and
                 col15 ne 30 and col16 ne 30 and col17 ne 30 and col18 ne 30 and col19 ne 30 and col20 ne 30 and col21 ne 30 and
                 col22 ne 30 and col23 ne 30 and col24 ne 30 and col25 ne 30 and col26 ne 30 and col27 ne 30 and col28 ne 30 and
                 col29 ne 30 and col30 ne 30);
%DoWork(n=31,whr=col1 ne 31 and col2 ne 31 and col3 ne 31 and col4 ne 31 and col5 ne 31 and col6 ne 31 and col7 ne 31 and 
                 col8 ne 31 and col9 ne 31 and col10 ne 31 and col11 ne 31 and col12 ne 31 and col13 ne 31 and col14 ne 31 and
                 col15 ne 31 and col16 ne 31 and col17 ne 31 and col18 ne 31 and col19 ne 31 and col20 ne 31 and col21 ne 31 and
                 col22 ne 31 and col23 ne 31 and col24 ne 31 and col25 ne 31 and col26 ne 31 and col27 ne 31 and col28 ne 31 and
                 col29 ne 31 and col30 ne 31 and col31 ne 31);
%DoWork(n=32,whr=col1 ne 32 and col2 ne 32 and col3 ne 32 and col4 ne 32 and col5 ne 32 and col6 ne 32 and col7 ne 32 and 
                 col8 ne 32 and col9 ne 32 and col10 ne 32 and col11 ne 32 and col12 ne 32 and col13 ne 32 and col14 ne 32 and
                 col15 ne 32 and col16 ne 32 and col17 ne 32 and col18 ne 32 and col19 ne 32 and col20 ne 32 and col21 ne 32 and
                 col22 ne 32 and col23 ne 32 and col24 ne 32 and col25 ne 32 and col26 ne 32 and col27 ne 32 and col28 ne 32 and
                 col29 ne 32 and col30 ne 32 and col31 ne 32 and col32 ne 32);
%DoWork(n=33,whr=col1 ne 33 and col2 ne 33 and col3 ne 33 and col4 ne 33 and col5 ne 33 and col6 ne 33 and col7 ne 33 and 
                 col8 ne 33 and col9 ne 33 and col10 ne 33 and col11 ne 33 and col12 ne 33 and col13 ne 33 and col14 ne 33 and
                 col15 ne 33 and col16 ne 33 and col17 ne 33 and col18 ne 33 and col19 ne 33 and col20 ne 33 and col21 ne 33 and
                 col22 ne 33 and col23 ne 33 and col24 ne 33 and col25 ne 33 and col26 ne 33 and col27 ne 33 and col28 ne 33 and
                 col29 ne 33 and col30 ne 33 and col31 ne 33 and col32 ne 33 and col33 ne 33);
%DoWork(n=34,whr=col1 ne 34 and col2 ne 34 and col3 ne 34 and col4 ne 34 and col5 ne 34 and col6 ne 34 and col7 ne 34 and 
                 col8 ne 34 and col9 ne 34 and col10 ne 34 and col11 ne 34 and col12 ne 34 and col13 ne 34 and col14 ne 34 and
                 col15 ne 34 and col16 ne 34 and col17 ne 34 and col18 ne 34 and col19 ne 34 and col20 ne 34 and col21 ne 34 and
                 col22 ne 34 and col23 ne 34 and col24 ne 34 and col25 ne 34 and col26 ne 34 and col27 ne 34 and col28 ne 34 and
                 col29 ne 34 and col30 ne 34 and col31 ne 34 and col32 ne 34 and col33 ne 34 and col34 ne 34);
%DoWork(n=35,whr=col1 ne 35 and col2 ne 35 and col3 ne 35 and col4 ne 35 and col5 ne 35 and col6 ne 35 and col7 ne 35 and 
                 col8 ne 35 and col9 ne 35 and col10 ne 35 and col11 ne 35 and col12 ne 35 and col13 ne 35 and col14 ne 35 and
                 col15 ne 35 and col16 ne 35 and col17 ne 35 and col18 ne 35 and col19 ne 35 and col20 ne 35 and col21 ne 35 and
                 col22 ne 35 and col23 ne 35 and col24 ne 35 and col25 ne 35 and col26 ne 35 and col27 ne 35 and col28 ne 35 and
                 col29 ne 35 and col30 ne 35 and col31 ne 35 and col32 ne 35 and col33 ne 35 and col34 ne 35 and col35 ne 35);
%DoWork(n=36,whr=col1 ne 36 and col2 ne 36 and col3 ne 36 and col4 ne 36 and col5 ne 36 and col6 ne 36 and col7 ne 36 and 
                 col8 ne 36 and col9 ne 36 and col10 ne 36 and col11 ne 36 and col12 ne 36 and col13 ne 36 and col14 ne 36 and
                 col15 ne 36 and col16 ne 36 and col17 ne 36 and col18 ne 36 and col19 ne 36 and col20 ne 36 and col21 ne 36 and
                 col22 ne 36 and col23 ne 36 and col24 ne 36 and col25 ne 36 and col26 ne 36 and col27 ne 36 and col28 ne 36 and
                 col29 ne 36 and col30 ne 36 and col31 ne 36 and col32 ne 36 and col33 ne 36 and col34 ne 36 and col35 ne 36 and 
                 col36 ne 36);
%DoWork(n=37,whr=col1 ne 37 and col2 ne 37 and col3 ne 37 and col4 ne 37 and col5 ne 37 and col6 ne 37 and col7 ne 37 and 
                 col8 ne 37 and col9 ne 37 and col10 ne 37 and col11 ne 37 and col12 ne 37 and col13 ne 37 and col14 ne 37 and
                 col15 ne 37 and col16 ne 37 and col17 ne 37 and col18 ne 37 and col19 ne 37 and col20 ne 37 and col21 ne 37 and
                 col22 ne 37 and col23 ne 37 and col24 ne 37 and col25 ne 37 and col26 ne 37 and col27 ne 37 and col28 ne 37 and
                 col29 ne 37 and col30 ne 37 and col31 ne 37 and col32 ne 37 and col33 ne 37 and col34 ne 37 and col35 ne 37 and 
                 col36 ne 37 and col37 ne 37);
%DoWork(n=38,whr=col1 ne 38 and col2 ne 38 and col3 ne 38 and col4 ne 38 and col5 ne 38 and col6 ne 38 and col7 ne 38 and 
                 col8 ne 38 and col9 ne 38 and col10 ne 38 and col11 ne 38 and col12 ne 38 and col13 ne 38 and col14 ne 38 and
                 col15 ne 38 and col16 ne 38 and col17 ne 38 and col18 ne 38 and col19 ne 38 and col20 ne 38 and col21 ne 38 and
                 col22 ne 38 and col23 ne 38 and col24 ne 38 and col25 ne 38 and col26 ne 38 and col27 ne 38 and col28 ne 38 and
                 col29 ne 38 and col30 ne 38 and col31 ne 38 and col32 ne 38 and col33 ne 38 and col34 ne 38 and col35 ne 38 and 
                 col36 ne 38 and col37 ne 38 and col38 ne 38);
%DoWork(n=39,whr=col1 ne 39 and col2 ne 39 and col3 ne 39 and col4 ne 39 and col5 ne 39 and col6 ne 39 and col7 ne 39 and 
                 col8 ne 39 and col9 ne 39 and col10 ne 39 and col11 ne 39 and col12 ne 39 and col13 ne 39 and col14 ne 39 and
                 col15 ne 39 and col16 ne 39 and col17 ne 39 and col18 ne 39 and col19 ne 39 and col20 ne 39 and col21 ne 39 and
                 col22 ne 39 and col23 ne 39 and col24 ne 39 and col25 ne 39 and col26 ne 39 and col27 ne 39 and col28 ne 39 and
                 col29 ne 39 and col30 ne 39 and col31 ne 39 and col32 ne 39 and col33 ne 39 and col34 ne 39 and col35 ne 39 and 
                 col36 ne 39 and col37 ne 39 and col38 ne 39 and col39 ne 39);
%DoWork(n=40,whr=col1 ne 40 and col2 ne 40 and col3 ne 40 and col4 ne 40 and col5 ne 40 and col6 ne 40 and col7 ne 40 and 
                 col8 ne 40 and col9 ne 40 and col10 ne 40 and col11 ne 40 and col12 ne 40 and col13 ne 40 and col14 ne 40 and
                 col15 ne 40 and col16 ne 40 and col17 ne 40 and col18 ne 40 and col19 ne 40 and col20 ne 40 and col21 ne 40 and
                 col22 ne 40 and col23 ne 40 and col24 ne 40 and col25 ne 40 and col26 ne 40 and col27 ne 40 and col28 ne 40 and
                 col29 ne 40 and col30 ne 40 and col31 ne 40 and col32 ne 40 and col33 ne 40 and col34 ne 40 and col35 ne 40 and 
                 col36 ne 40 and col37 ne 40 and col38 ne 40 and col39 ne 40 and col40 ne 40);


*Put the dataset back together again and drop variables that are no longer complete;
data medsqtr70; 
 set medsqtr40 incompqtr1 - incompqtr40;

 drop p_status recruitid _name_ col1-col40;
run;

proc sort data=medsqtr70; by studyid quarter; run;

*Summarize meds by quarter;
data medsqtr80 quarter1 quarter2 quarter3 quarter4 quarter5 quarter6 quarter7 quarter8 quarter9
     quarter10 quarter11 quarter12 quarter13 quarter14 quarter15 quarter16 quarter17 quarter18
     quarter19 quarter20 quarter21 quarter22 quarter23 quarter24 quarter25 quarter26 quarter27
     quarter28 quarter29 quarter30 quarter31 quarter32 quarter33 quarter34 quarter35 quarter36
     quarter37 quarter38 quarter39 quarter40;
 set medsqtr70;

 *if no meds reported then output to a separate dataset;
 *otherwise, output quarter-specific datasets;
 if event in (' ') and medcode in (.) then output medsqtr80;
 if quarter=1 then output quarter1;
 if quarter=2 then output quarter2;
 if quarter=3 then output quarter3;
 if quarter=4 then output quarter4;
 if quarter=5 then output quarter5;
 if quarter=6 then output quarter6;
 if quarter=7 then output quarter7;
 if quarter=8 then output quarter8;
 if quarter=9 then output quarter9;
 if quarter=10 then output quarter10;
 if quarter=11 then output quarter11;
 if quarter=12 then output quarter12;
 if quarter=13 then output quarter13;
 if quarter=14 then output quarter14;
 if quarter=15 then output quarter15;
 if quarter=16 then output quarter16;
 if quarter=17 then output quarter17;
 if quarter=18 then output quarter18;
 if quarter=19 then output quarter19;
 if quarter=20 then output quarter20;
 if quarter=21 then output quarter21;
 if quarter=22 then output quarter22;
 if quarter=23 then output quarter23;
 if quarter=24 then output quarter24;
 if quarter=25 then output quarter25;
 if quarter=26 then output quarter26;
 if quarter=27 then output quarter27;
 if quarter=28 then output quarter28;
 if quarter=29 then output quarter29;
 if quarter=30 then output quarter30;
 if quarter=31 then output quarter31;
 if quarter=32 then output quarter32;
 if quarter=33 then output quarter33;
 if quarter=34 then output quarter34;
 if quarter=35 then output quarter35;
 if quarter=36 then output quarter36;
 if quarter=37 then output quarter37;
 if quarter=38 then output quarter38;
 if quarter=39 then output quarter39;
 if quarter=40 then output quarter40;
run;

*Macro to create quarter and drug specific datasets;
*Purpose is to flag whether or not a particular drug was taken in the given quarter;
*Macro to be called for each drug type and quarter;
%macro drugtypes(qtr,drugtp);
data quarter &drugtp&qtr;
 set quarter&qtr;

 *no longer need medcode, drugname, and event variables;
 keep studyid &drugtp. quarter;

 if &drugtp = 1 then output &drugtp&qtr;
run;

*only keep one row per participant since repeating rows not necessary;
proc sort data=&drugtp&qtr nodupkey; by studyid; run;
%mend;

%macro doDrugTypes();
%do i=1 %to 40;
%drugtypes(&i.,albut_broncho);
%drugtypes(&i.,analgesics_oral);
%drugtypes(&i.,analgesics_topical);
%drugtypes(&i.,antibiot_oral);
%drugtypes(&i.,antibiot_topical);
%drugtypes(&i.,antifung_oral);
%drugtypes(&i.,antifung_topical); 
%drugtypes(&i.,antihist_oral); 
%drugtypes(&i.,antihist_topical); 
%drugtypes(&i.,antileuk);
%drugtypes(&i.,cough_meds); 
%drugtypes(&i.,cromones);
%drugtypes(&i.,decongest);
%drugtypes(&i.,gi_meds);
%drugtypes(&i.,LABA);
%drugtypes(&i.,nasalspray_noster);
%drugtypes(&i.,nasalspray_ster);
%drugtypes(&i.,steroid_inhaled);
%drugtypes(&i.,steroid_oral);
%drugtypes(&i.,steroid_topical);
%drugtypes(&i.,ophthals);
%drugtypes(&i.,otological);
%drugtypes(&i.,epinephrine);
%drugtypes(&i.,vitamin);
%drugtypes(&i.,antiviral_oral);
%drugtypes(&i.,inhaled_steroid_LABA);
%drugtypes(&i.,combo_antihist);
%drugtypes(&i.,combo_nonantihist);
%drugtypes(&i.,cold_preps);
%drugtypes(&i.,other_topical);
%drugtypes(&i.,other_inhale);
%drugtypes(&i.,other_oral);
%drugtypes(&i.,other_route_unknown);

data qtr00_&i.;
 merge albut_broncho&i. analgesics_oral&i. analgesics_topical&i. antibiot_oral&i. antibiot_topical&i. antifung_oral&i. antifung_topical&i.
       antihist_oral&i. antihist_topical&i. antileuk&i. cough_meds&i. cromones&i. decongest&i. gi_meds&i. LABA&i. nasalspray_noster&i. nasalspray_ster&i.
       steroid_inhaled&i. steroid_oral&i. steroid_topical&i. ophthals&i. otological&i. epinephrine&i. vitamin&i. antiviral_oral&i. 
       inhaled_steroid_LABA&i. combo_antihist&i. 
       combo_nonantihist&i. cold_preps&i. other_topical&i. other_inhale&i. other_oral&i. other_route_unknown&i.;
by studyid;
%end;
run;
%mend;
%doDrugTypes();

*Now set the quarterly datasets back together and create yes/no variables and label them;
data medsqtr90;
 set qtr00_1 - qtr00_40;

 albut_broncho = albut_broncho in (1);
 analgesics_oral = analgesics_oral in (1);
 analgesics_topical = analgesics_topical in (1);
 antibiot_oral = antibiot_oral in (1);
 antibiot_topical = antibiot_topical in (1);
 antifung_oral = antifung_oral in (1);
 antifung_topical = antifung_topical in (1); 
 antihist_oral = antihist_oral in (1); 
 antihist_topical = antihist_topical in (1); 
 antileuk = antileuk in (1);
 cough_meds = cough_meds in (1); 
 cromones = cromones in (1);
 decongest = decongest in (1);
 gi_meds = gi_meds in (1);
 LABA = LABA in (1);
 nasalspray_noster = nasalspray_noster in (1);
 nasalspray_ster = nasalspray_ster in (1);
 steroid_inhaled = steroid_inhaled in (1);
 steroid_oral = steroid_oral in (1);
 steroid_topical = steroid_topical in (1);
 ophthals = ophthals in (1);
 otological = otological in (1);
 epinephrine = epinephrine in (1);
 vitamin = vitamin in (1);
 antiviral_oral = antiviral_oral in (1);
 inhaled_steroid_LABA = inhaled_steroid_LABA in (1); 
 combo_antihist = combo_antihist in (1);
 combo_nonantihist = combo_nonantihist in (1);
 cold_preps = cold_preps in (1);
 other_topical = other_topical in (1);
 other_inhale = other_inhale in (1);
 other_oral = other_oral in (1);
 other_route_unknown = other_route_unknown in (1);

label albut_broncho = "Albuterol/Short-acting bronchodilator" 
     analgesics_oral = "Analgesics/antipyretics - oral"
     analgesics_topical = "Analgesics/antipyretics - topical"
     antibiot_oral = "Antibiotics - oral"
     antibiot_topical = "Antibiotics - topical" 
     antifung_oral = "Anti-fungals - oral/systemic" 
     antifung_topical = "Anti-fungals - topical"
     antihist_oral = "Antihistamines - oral"
     antihist_topical = "Antihistamines - topical"
     antileuk = "Anti-leukotrienes (montelukast, zafirlukast, zileuton)"
     cough_meds = "Cough medicine"
     cromones = "Cromones"
     decongest = "Decongestants"
     gi_meds = "GI medications (pepto-bismol, maalox)"
     LABA = "Long-acting beta agonist (LABA)"
     nasalspray_noster = "Nasal spray - non-steroidal"
     nasalspray_ster = "Nasal spray - steroidal" 
     steroid_inhaled = "Steroids - inhaled"
     steroid_oral = "Steroids - oral"
     steroid_topical = "Steroids - topical" 
     ophthals = "Ophthalmologicals"
     otological = "Otologicals"
      epinephrine = "Epinephrine/Epipen"
     vitamin = "Vitamins/Nutritionals"
     antiviral_oral = "Anti-virals - oral"
     inhaled_steroid_LABA = "Combination inhaled steroid + LABA"
      combo_antihist = "Combination products with antihistamine"
     combo_nonantihist = "Cominbation products without antihistamine"
     cold_preps = "Cold preparations - unspecified"
      other_topical = "Other products - topical"
     other_inhale = "Other products - inhaled"
     other_oral = "Other products - oral" 
     other_route_unknown = "Other products - other or unknown route"
      quarter = "Event Quarter";

     format albut_broncho analgesics_oral analgesics_topical antibiot_oral antibiot_topical antifung_oral 
             antifung_topical antihist_oral antihist_topical antileuk cough_meds cromones decongest gi_meds 
            LABA nasalspray_noster nasalspray_ster steroid_inhaled steroid_oral steroid_topical ophthals 
             otological epinephrine vitamin antiviral_oral inhaled_steroid_LABA combo_antihist combo_nonantihist 
            cold_preps other_topical other_inhale other_oral other_route_unknown yesnofm.;
run;

*Add the rows with no medications indications back in;
*Do not need event medcode or drugname variables since they were blank anyway;

data medsqtr100;
 set medsqtr80 (drop=event medcode drugname aVisit year CMTERM route CMDAYS) medsqtr90;

run;
proc sort data=medsqtr100; by studyid quarter; run;
proc sort data=medsdate out=medsdate00 nodupkey dupout=medsdatedup; by studyid quarter; run;
proc sort data=medstyle out=medstyle00 nodupkey; by studyid quarter; run;

data medsqtr110;
 merge medsqtr100 (in=a) medsdate00 medstyle00;
  by studyid quarter;
  if a;
  if tylenol = . then tylenol=0;
  label tylenol='Tylenol Use Reported During Quarter';
run;


*Create derived dataset and put recruitid and participant status back on the dataset;
data derive.meduse_byQTR;
 merge pdata medsqtr110;
 by studyid;
run;

proc sort data=derive.meduse_byQTR out=meduse_byQTR; by quarter; run;

*Do some additional data checking;
proc means data=meduse_byQTR;
   var albut_broncho -- other_route_unknown;
   by quarter;
run;

proc freq data=meduse_byQTR;
   tables albut_broncho -- other_route_unknown ;
   by quarter;
run;

*ods rtf style=journal file="S:\RhoFED\ICAC\Studies\URECA\Prog\Derive\ThreeYearAnalyses\MedUse_by_Year_Freq.rtf" notoc_data;
proc freq data=meduse_byQTR;
   tables albut_broncho -- other_route_unknown * quarter/norow;
run;
*ods rtf close;

proc contents data=derive.meduse_byQTR; run;

*Code to flag years following a participant being documented as inactive in the study;
proc sort data=derive.meduse_byQTR out=parts (keep=studyid) nodupkey; by studyid;
where p_status in ('inactive','active'); run;

proc sql;
 create table events as
 select * 
 from master.eset as e, parts as i
 where e.studyid=i.studyid
 ;
quit;

proc sort data=events; by studyid; run;

data events00;
 set events;

*Get or calculate visit date;
if date_occurred>.z then date=date_occurred;
else if date_scheduled>.z then date=date_scheduled;
else if n(date_start_window, date_end_window)=2 then date=mean(date_start_window, date_end_window);
else date=max(date_start_window, date_end_window);

 if substr(event,2,6)="-month" then do;
   eventn=substr(event,1,1)*1;
   event="Event0"||substr(event,1,1);
 end;
 else if substr(event,3,6)="-month" then do;
   eventn=substr(event,1,2)*1;
   event="Event"||substr(event,1,2);
 end;
 else if event in ("deactivation event") then do 
   event="Deact";
   eventn=99;
 end;
 else delete;

 format date mmddyy8.;

 drop id parent_id visit_notes date_occurred date_scheduled date_start_window date_end_window time_scheduled time_occurred;
run;

proc sort data=events00 out=events10; by studyid date descending event; run;


*get last occurred visit for each participant;
data lastevent;
set events10;
by studyid;
retain last lastn deact;

if first.studyid then do;
  last="        ";
  lastn=.;
  deact=0;
end;

if event ne "deact" and status="occurred" then do;
  last=event;
  lastn=eventn;
end;
if event="Deact" then deact=1;

if last.studyid then output;

keep studyid deact last lastn;
run;

proc freq; tables deact; run;

*get last occurred visit prior to deactivation;
data prior_to_deact;
 set events10;
  where status eq "occurred";
  by studyid;

retain prev "       " prevn; 
if first.studyid then do;
 prev="       ";
 prevn=0;
end;

if event="Deact" then output;

prev=event;
prevn=eventn;

keep studyid prevn;
run;

data prior_to_deact10;
 set prior_to_deact;

if prevn in (0) then last_quarter=0;
if prevn in (3) then last_quarter=1;
if prevn in (6) then last_quarter=2;
if prevn in (9) then last_quarter=3;
if prevn in (12) then last_quarter=4;
if prevn in (15) then last_quarter=5;
if prevn in (18) then last_quarter=6;
if prevn in (21) then last_quarter=7;
if prevn in (24) then last_quarter=8;
if prevn in (27) then last_quarter=9;
if prevn in (30) then last_quarter=10;
if prevn in (33) then last_quarter=11;
if prevn in (36) then last_quarter=12;
if prevn in (39) then last_quarter=13;
if prevn in (42) then last_quarter=14;
if prevn in (45) then last_quarter=15;
if prevn in (48) then last_quarter=16;
if prevn in (51) then last_quarter=17;
if prevn in (54) then last_quarter=18;
if prevn in (57) then last_quarter=19;
if prevn in (60) then last_quarter=20;
if prevn in (63) then last_quarter=21;
if prevn in (66) then last_quarter=22;
if prevn in (69) then last_quarter=23;
if prevn in (72) then last_quarter=24;
if prevn in (75) then last_quarter=25;
if prevn in (78) then last_quarter=26;
if prevn in (81) then last_quarter=27;
if prevn in (84) then last_quarter=28;
if prevn in (87) then last_quarter=29;
if prevn in (90) then last_quarter=30;
if prevn in (93) then last_quarter=31;
if prevn in (96) then last_quarter=33;
if prevn in (99) then last_quarter=34;
if prevn in (102) then last_quarter=35;
if prevn in (105) then last_quarter=36;
if prevn in (108) then last_quarter=37;
if prevn in (111) then last_quarter=38;
if prevn in (114) then last_quarter=39;
if prevn in (117) then last_quarter=40;


run;

data events20;
 merge lastevent prior_to_deact10;
  by studyid;

run;

proc sort data=derive.meduse_byQTR out=meduse_byQTR; by studyid quarter; run;

data meduse_byQTR10;
 merge meduse_byQTR events20;
  by studyid;

  *Set to missing instances where participant was not active during any part of a specific year following deactivation;
  if p_status eq "inactive" and quarter gt last_quarter then do;
    albut_broncho = .;
    analgesics_oral = .;
    analgesics_topical = .;
    antibiot_oral = .;
    antibiot_topical = .;
    antifung_oral = .;
    antifung_topical = .; 
    antihist_oral = .; 
    antihist_topical = .; 
    antileuk = .;
    cough_meds = .; 
    cromones = .;
    decongest = .;
    gi_meds = .;
    LABA = .;
    nasalspray_noster = .;
    nasalspray_ster = .;
    steroid_inhaled = .;
    steroid_oral = .;
    steroid_topical = .;
    ophthals = .;
    otological = .;
    epinephrine = .;
    vitamin = .;
    antiviral_oral = .;
    inhaled_steroid_LABA = .; 
    combo_antihist = .;
    combo_nonantihist = .;
    cold_preps = .;
    other_topical = .;
    other_inhale = .;
    other_oral = .;
    other_route_unknown = .;

 end;

    *add aVisit back in;
   aVisit = quarter*3;


run;

/*************************************************************************************
 Create Shell
**************************************************************************************/
data shell;
 set derive.groups;

 site=substr(studyid, 4, 2);
 label    site="Study Site";
 format site $site.;

 do avisit = 3, 6, 9, 12,15, 18, 21, 24,27, 30, 33,36,39, 42, 45,48,51, 54, 57,60,63, 66, 69,72, 75, 78, 81,84,87, 90, 93,96,99, 102, 105, 108, 111, 114, 117, 120;
  if avisit in ( 3,  6,  9, 12) then year=1;
  if avisit in (15, 18, 21, 24) then year=2;
  if avisit in (27, 30, 33, 36) then year=3;
  if avisit in (39, 42, 45, 48) then year=4;
  if avisit in (51, 54, 57, 60) then year=5;
  if avisit in (63, 66, 69, 72) then year=6;
  if avisit in (75, 78, 81, 84) then year=7;
  if avisit in (87, 90, 93, 96) then year=8;
  if avisit in (99, 102, 105, 108) then year=9;
  if avisit in (111, 114, 117, 120)            then year=10;
  output;
 end;
 keep studyid recruitid site avisit year;
run;

/*************************************************************************************
 Merge with Shell
**************************************************************************************/
proc sort data=meduse_byQTR10; by studyid ;
proc sort data=shell; by studyid avisit; 

data derive.meduse_byQTR;
 merge shell meduse_byQTR10 (drop=recruitid in=c) derive.respondent;
 by studyid avisit;
 if c=1 then meduse_byQTR=1; else meduse_byQTR=0;
run;

ods rtf style=journal file="S:\RhoFED\ICAC\Studies\URECA\Prog\Derive\MedUse_by_Quarter_Freq_&sysdate..rtf" notoc_data;
proc freq data=meduse_byQTR10;
   tables albut_broncho -- other_route_unknown * quarter/norow;
run;
ods rtf close;

*** Codebook ****************************************************************;

%include 'S:\BASESTAT\RhoUtil\gitGot.sas';
    %gitGot
        (repo = https://github.com/RhoInc/sas-codebook
        ,folder = Macros);

%codebook_generic
        (data = derive.meduse_byQTR
        ,pdfpath = S:/RhoFED/ICAC/Studies/URECA/Data/Derive/CBK);